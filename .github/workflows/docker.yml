name: Build and Push docker

on:
  push:
    branches:
      - 'main'
      - 'develop'
    tags:
      - 'v*.*.*'

  pull_request:
    branches:
      - 'main'
      - 'develop'

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    permissions:
      contents: read # Needed to checkout the repository
      packages: write # Needed to push packages (Docker images) to GHCR

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetches all history, tags, and branches.

      - name: Log in to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }} # Your GitHub username or organization name
          password: ${{ secrets.GITHUB_TOKEN }} # GITHUB_TOKEN is automatically created by Actions

      - name: Extract metadata (tags, labels) for Docker
        id: meta # Assign an ID to this step to refer to its outputs later
        uses: docker/metadata-action@v5
        with:
          # Defines the image name in GHCR. Uses the repository owner and name.
          # e.g., ghcr.io/your-username/your-repo-name
          # The action automatically lowercases the repository name part, matching your script's 'tr' command.
          images: ghcr.io/${{ github.repository }}

          # Defines how tags are generated. This setup aims to replicate common tagging strategies
          # and cover your original script's intent for branch and version tags.
          tags: |
            # Tag with the branch name when the event is a push to a branch
            # e.g., 'main', 'develop'
            type=ref,event=branch

            # Tag with 'pr-NUMBER' when the event is a pull request
            # e.g., 'pr-123'. These are typically not pushed due to the 'push' condition below.
            type=ref,event=pr

            # Tag with the Git tag name when the event is a push of a Git tag
            # e.g., if you push git tag 'v1.2.3', this creates image tag 'v1.2.3'
            type=ref,event=tag

            # For Git tags that are semantic versions (e.g., v1.0.0, v1.2.3-alpha.1),
            # create more specific semver tags. This handles your 'v*' tag logic.
            type=semver,pattern={{version}} # Full version: e.g., v1.2.3
            type=semver,pattern={{major}}.{{minor}} # Major.minor: e.g., v1.2
            # type=semver,pattern={{major}} # Optional: Major only: e.g., v1

            # Tag with the short Git commit SHA
            # e.g., 'a1b2c3d'
            type=sha,prefix=,suffix=,format=short

            # Tag as 'latest' if the push is to the default branch (usually 'main')
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }} # Push only if it's not a pull request event.
          # This means pushes to branches (main, develop) and tags (v*.*.*) will be pushed.
          tags: ${{ steps.meta.outputs.tags }} # Use all tags generated by the metadata-action
          labels: ${{ steps.meta.outputs.labels }} # Use all labels generated by the metadata-action
          cache-from: type=gha # Enable build cache from GitHub Actions (uses previous builds)
          cache-to: type=gha,mode=max # Enable build cache to GitHub Actions (mode=max for wider caching)

      - name: Echo image URL and tags
        # This step runs only if images were potentially pushed (i.e., not a pull request event).
        if: github.event_name != 'pull_request'
        run: |
          echo "Docker image ghcr.io/${{ github.repository }} was built."
          echo "If this was a push to a branch or tag, it would have been pushed with the following tags:"
          echo "${{ steps.meta.outputs.tags }}"
          echo "Generated labels:"
          echo "${{ steps.meta.outputs.labels }}"
